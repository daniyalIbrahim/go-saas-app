{"remainingRequest":"/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/src/components/Sidebar.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/src/components/Sidebar.vue","mtime":1599693140000},{"path":"/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/node_modules/babel-loader/lib/index.js","mtime":1610669667321},{"path":"/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/node_modules/ts-loader/index.js","mtime":1610669671571},{"path":"/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/node_modules/vuetify-loader/lib/loader.js","mtime":1610669687221},{"path":"/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/node_modules/cache-loader/dist/cjs.js","mtime":1610669676038},{"path":"/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/node_modules/vue-loader/lib/index.js","mtime":1610669676734}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Emit, Prop, Vue } from 'vue-property-decorator';\nimport { Action, Getter, State } from 'vuex-class';\n\nimport { IUserState } from '../store/modules/user';\n\n@Component\nexport default class Sidebar extends Vue {\n  @Prop(Boolean) public value!: boolean;\n\n  @Action('logout', { namespace: 'user' }) private logout: any;\n  @Getter('getName', { namespace: 'user' }) private getName!: string;\n  @Getter('getAvatar', { namespace: 'user' }) private getAvatar!: string;\n  @State('user') private user!: IUserState;\n\n  private items = [\n    { title: 'Home', icon: 'dashboard' },\n    { title: 'About', icon: 'question_answer' },\n  ];\n\n  private get drawer(): boolean {\n    return this.value;\n  }\n\n  private set drawer(newVal: boolean) {\n    this.changeValue(newVal);\n  }\n\n  @Emit('input')\n  public changeValue(val: boolean) { /* */ }\n\n  private goTo(path: string) {\n    this.$router.push({ path });\n  }\n\n  private doLogout() {\n    this.drawer = false;\n    this.logout();\n    this.$router.push({ path: '/' });\n  }\n}\n",{"version":3,"sources":["Sidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Sidebar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-navigation-drawer :clipped=\"$vuetify.breakpoint.lgAndUp\" v-model=\"drawer\" fixed app disable-resize-watcher>\n    <v-img :aspect-ratio=\"16/9\" :src=\"require('../assets/sidebar.png')\">\n      <v-layout pa-2 column fill-height class=\"lightbox white--text\">\n        <v-spacer></v-spacer>\n        <v-flex shrink>\n          <v-avatar :tile=\"false\" size=\"32px\" color=\"primary\">\n            <img :src=\"getAvatar\" :alt=\"getName\">\n          </v-avatar>\n          <div class=\"subheading\">{{user.name}}</div>\n          <div class=\"body-1\">{{user.email}}</div>\n        </v-flex>\n      </v-layout>\n    </v-img>\n\n    <v-list dense>\n      <v-list-tile @click=\"goTo('/')\">\n        <v-list-tile-action>\n          <v-icon>home</v-icon>\n        </v-list-tile-action>\n        <v-list-tile-content>\n          <v-list-tile-title>Home</v-list-tile-title>\n        </v-list-tile-content>\n      </v-list-tile>\n\n      <v-list-tile @click=\"goTo('/profile')\">\n        <v-list-tile-action>\n          <v-icon>person</v-icon>\n        </v-list-tile-action>\n        <v-list-tile-content>\n          <v-list-tile-title>Profile</v-list-tile-title>\n        </v-list-tile-content>\n      </v-list-tile>\n\n      <v-divider></v-divider>\n\n      <v-list-tile @click=\"doLogout\">\n        <v-list-tile-action>\n          <v-icon>power_settings_new</v-icon>\n        </v-list-tile-action>\n        <v-list-tile-content>\n          <v-list-tile-title>Logout</v-list-tile-title>\n        </v-list-tile-content>\n      </v-list-tile>\n    </v-list>\n  </v-navigation-drawer>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Emit, Prop, Vue } from 'vue-property-decorator';\nimport { Action, Getter, State } from 'vuex-class';\n\nimport { IUserState } from '../store/modules/user';\n\n@Component\nexport default class Sidebar extends Vue {\n  @Prop(Boolean) public value!: boolean;\n\n  @Action('logout', { namespace: 'user' }) private logout: any;\n  @Getter('getName', { namespace: 'user' }) private getName!: string;\n  @Getter('getAvatar', { namespace: 'user' }) private getAvatar!: string;\n  @State('user') private user!: IUserState;\n\n  private items = [\n    { title: 'Home', icon: 'dashboard' },\n    { title: 'About', icon: 'question_answer' },\n  ];\n\n  private get drawer(): boolean {\n    return this.value;\n  }\n\n  private set drawer(newVal: boolean) {\n    this.changeValue(newVal);\n  }\n\n  @Emit('input')\n  public changeValue(val: boolean) { /* */ }\n\n  private goTo(path: string) {\n    this.$router.push({ path });\n  }\n\n  private doLogout() {\n    this.drawer = false;\n    this.logout();\n    this.$router.push({ path: '/' });\n  }\n}\n</script>\n"]}]}