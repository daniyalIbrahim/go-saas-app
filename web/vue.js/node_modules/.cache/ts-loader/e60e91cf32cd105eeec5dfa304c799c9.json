{"remainingRequest":"/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/node_modules/thread-loader/dist/cjs.js!/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/node_modules/babel-loader/lib/index.js!/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/node_modules/ts-loader/index.js??ref--13-3!/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/src/store/modules/user.ts","dependencies":[{"path":"/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/src/store/modules/user.ts","mtime":1599693140000},{"path":"/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/node_modules/cache-loader/dist/cjs.js","mtime":1610669676038},{"path":"/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/node_modules/thread-loader/dist/cjs.js","mtime":1610669676723},{"path":"/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/node_modules/babel-loader/lib/index.js","mtime":1610669667321},{"path":"/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/node_modules/ts-loader/index.js","mtime":1610669671571}],"contextDependencies":[],"result":["import _JSON$stringify from \"/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport _Date$now from \"/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/node_modules/@babel/runtime-corejs2/core-js/date/now\";\nimport jwtDecode from 'jwt-decode';\nimport md5 from 'md5';\nimport { API_ENDPOINT, AUTH_TOKEN } from '../../constants'; // Initial State\n\nvar state = function () {\n  var token = localStorage.getItem(AUTH_TOKEN);\n\n  if (token === null || token === '') {\n    return {\n      email: undefined,\n      id: undefined,\n      name: undefined,\n      token: undefined\n    };\n  }\n\n  var decoded = jwtDecode(token);\n\n  if (decoded.exp * 1000 < _Date$now().valueOf()) {\n    return {\n      email: undefined,\n      id: undefined,\n      name: undefined,\n      token: undefined\n    };\n  }\n\n  return {\n    email: decoded.email,\n    id: decoded.id,\n    name: decoded.name,\n    token: token\n  };\n}(); // Getters\n\n\nvar getters = {\n  isAuthenticated: function isAuthenticated(us) {\n    return us.token ? true : false;\n  },\n  getName: function getName(us) {\n    return us.name ? us.name : '';\n  },\n  getAvatar: function getAvatar(us) {\n    var base = 'https://www.gravatar.com/avatar/';\n    var query = \"d=mm&r=g&s=\".concat(512);\n    var formattedEmail = ('' + us.email).trim().toLowerCase();\n    var hash = md5(formattedEmail, {\n      encoding: 'binary'\n    });\n    return \"\".concat(base).concat(hash, \"?\").concat(query);\n  }\n}; // Actions\n\nvar actions = {\n  login: function () {\n    var _login = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref, _ref2) {\n      var commit, email, password, response, json, payload;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              email = _ref2.email, password = _ref2.password;\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch(API_ENDPOINT + '/api/v1/auth', {\n                body: _JSON$stringify({\n                  email: email,\n                  password: password\n                }),\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                method: 'post'\n              });\n\n            case 5:\n              response = _context.sent;\n              _context.next = 8;\n              return response.json();\n\n            case 8:\n              json = _context.sent;\n\n              if (!(response.status >= 200 && response.status < 300)) {\n                _context.next = 15;\n                break;\n              }\n\n              payload = json;\n              commit('SET_USER', payload);\n              commit('SET_TOKEN', payload);\n              _context.next = 17;\n              break;\n\n            case 15:\n              if (!json.error) {\n                _context.next = 17;\n                break;\n              }\n\n              throw new Error(json.message);\n\n            case 17:\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](2);\n              throw new Error(_context.t0);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[2, 19]]);\n    }));\n\n    function login(_x, _x2) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }(),\n  signup: function () {\n    var _signup = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref3, _ref4) {\n      var commit, name, email, password, response, json, payload;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref3.commit;\n              name = _ref4.name, email = _ref4.email, password = _ref4.password;\n              _context2.prev = 2;\n              _context2.next = 5;\n              return fetch(API_ENDPOINT + '/api/v1/account', {\n                body: _JSON$stringify({\n                  name: name,\n                  email: email,\n                  password: password\n                }),\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                method: 'post'\n              });\n\n            case 5:\n              response = _context2.sent;\n              _context2.next = 8;\n              return response.json();\n\n            case 8:\n              json = _context2.sent;\n\n              if (!(response.status >= 200 && response.status < 300)) {\n                _context2.next = 14;\n                break;\n              }\n\n              payload = json;\n              commit('SET_USER', payload);\n              _context2.next = 16;\n              break;\n\n            case 14:\n              if (!json.error) {\n                _context2.next = 16;\n                break;\n              }\n\n              throw new Error(json.message);\n\n            case 16:\n              _context2.next = 21;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](2);\n              throw new Error(_context2.t0);\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[2, 18]]);\n    }));\n\n    function signup(_x3, _x4) {\n      return _signup.apply(this, arguments);\n    }\n\n    return signup;\n  }(),\n  save: function () {\n    var _save = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref5, _ref6) {\n      var commit, name, email, response, json, payload;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref5.commit;\n              name = _ref6.name, email = _ref6.email;\n              _context3.prev = 2;\n              _context3.next = 5;\n              return fetch(API_ENDPOINT + '/api/v1/account', {\n                body: _JSON$stringify({\n                  name: name,\n                  email: email\n                }),\n                headers: {\n                  'Accept': 'application/json',\n                  'Authorization': 'Bearer ' + localStorage.getItem(AUTH_TOKEN),\n                  'Content-Type': 'application/json'\n                },\n                method: 'put'\n              });\n\n            case 5:\n              response = _context3.sent;\n              _context3.next = 8;\n              return response.json();\n\n            case 8:\n              json = _context3.sent;\n\n              if (!(response.status >= 200 && response.status < 300)) {\n                _context3.next = 15;\n                break;\n              }\n\n              payload = json;\n              commit('SET_USER', payload);\n              commit('SET_TOKEN', payload);\n              _context3.next = 17;\n              break;\n\n            case 15:\n              if (!json.error) {\n                _context3.next = 17;\n                break;\n              }\n\n              throw new Error(json.message);\n\n            case 17:\n              _context3.next = 22;\n              break;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.t0 = _context3[\"catch\"](2);\n              throw new Error(_context3.t0);\n\n            case 22:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this, [[2, 19]]);\n    }));\n\n    function save(_x5, _x6) {\n      return _save.apply(this, arguments);\n    }\n\n    return save;\n  }(),\n  get: function () {\n    var _get = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(_ref7) {\n      var commit, response, json, payload;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref7.commit;\n              _context4.prev = 1;\n              _context4.next = 4;\n              return fetch(API_ENDPOINT + '/api/v1/account', {\n                headers: {\n                  'Accept': 'application/json',\n                  'Authorization': 'Bearer ' + localStorage.getItem(AUTH_TOKEN),\n                  'Content-Type': 'application/json'\n                },\n                method: 'get'\n              });\n\n            case 4:\n              response = _context4.sent;\n              _context4.next = 7;\n              return response.json();\n\n            case 7:\n              json = _context4.sent;\n\n              if (!(response.status >= 200 && response.status < 300)) {\n                _context4.next = 13;\n                break;\n              }\n\n              payload = json;\n              commit('SET_USER', payload);\n              _context4.next = 16;\n              break;\n\n            case 13:\n              if (!json.error) {\n                _context4.next = 16;\n                break;\n              }\n\n              commit('UNSET_USER');\n              throw new Error(json.message);\n\n            case 16:\n              _context4.next = 22;\n              break;\n\n            case 18:\n              _context4.prev = 18;\n              _context4.t0 = _context4[\"catch\"](1);\n              commit('UNSET_USER');\n              throw new Error(_context4.t0);\n\n            case 22:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this, [[1, 18]]);\n    }));\n\n    function get(_x7) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }(),\n  logout: function logout(_ref8) {\n    var commit = _ref8.commit;\n    commit('UNSET_USER');\n  }\n}; // Mutations\n\nvar mutations = {\n  SET_USER: function SET_USER(us, payload) {\n    us.email = payload.email;\n    us.id = payload.id;\n    us.name = payload.name;\n  },\n  SET_TOKEN: function SET_TOKEN(us, payload) {\n    localStorage.setItem(AUTH_TOKEN, payload.token);\n    us.token = payload.token;\n  },\n  UNSET_USER: function UNSET_USER(us) {\n    localStorage.removeItem(AUTH_TOKEN);\n    us.email = undefined;\n    us.id = undefined;\n    us.name = undefined;\n    us.token = undefined;\n  }\n};\nexport var user = {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/daniyalibrahim/go/src/github.com/daniyalibrahim/go-saas-app/web/vue.js/src/store/modules/user.ts"],"names":[],"mappings":"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","sourcesContent":["import jwtDecode from 'jwt-decode';\nimport md5 from 'md5';\nimport { ActionContext, ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n\nimport { API_ENDPOINT, AUTH_TOKEN } from '../../constants';\nimport { IRootState } from './types';\n\n// Interfaces\nexport interface IUserState {\n  email?: string;\n  id?: string;\n  name?: string;\n  token?: string;\n}\n\nexport interface IJWTDecoded {\n  exp: number;\n  id: string;\n  email: string;\n  name: string;\n}\n\n// Initial State\nconst state: IUserState = (() => {\n  const token = localStorage.getItem(AUTH_TOKEN);\n\n  if (token === null || token === '') {\n    return {\n      email: undefined,\n      id: undefined,\n      name: undefined,\n      token: undefined,\n    };\n  }\n\n  const decoded: IJWTDecoded = jwtDecode(token);\n\n  if (decoded.exp * 1000 < Date.now().valueOf()) {\n    return {\n      email: undefined,\n      id: undefined,\n      name: undefined,\n      token: undefined,\n    };\n  }\n\n  return {\n    email: decoded.email,\n    id: decoded.id,\n    name: decoded.name,\n    token,\n  };\n})();\n\n// Getters\nconst getters: GetterTree<IUserState, IRootState> = {\n  isAuthenticated(us: IUserState): boolean {\n    return us.token ? true : false;\n  },\n\n  getName(us: IUserState): string {\n    return us.name ? us.name : '';\n  },\n\n  getAvatar(us: IUserState): string {\n    const base = 'https://www.gravatar.com/avatar/';\n    const query = `d=mm&r=g&s=${512}`;\n    const formattedEmail = ('' + us.email).trim().toLowerCase();\n    const hash = md5(formattedEmail, {encoding: 'binary'});\n\n    return `${base}${hash}?${query}`;\n  },\n};\n\n// Actions\nconst actions: ActionTree<IUserState, IRootState> = {\n  async login({commit}: ActionContext<IUserState, IRootState>, {email, password}) {\n    try {\n      const response = await fetch(API_ENDPOINT + '/api/v1/auth', {\n        body: JSON.stringify({\n          email,\n          password,\n        }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        method: 'post',\n      });\n\n      const json = await response.json();\n\n      if (response.status >= 200 && response.status < 300) {\n        const payload: IUserState = json;\n        commit('SET_USER', payload);\n        commit('SET_TOKEN', payload);\n      } else {\n        if (json.error) {\n          throw new Error(json.message);\n        }\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  },\n\n  async signup({commit}: ActionContext<IUserState, IRootState>, {name, email, password}) {\n    try {\n      const response = await fetch(API_ENDPOINT + '/api/v1/account', {\n        body: JSON.stringify({\n          name,\n          email,\n          password,\n        }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        method: 'post',\n      });\n\n      const json = await response.json();\n\n      if (response.status >= 200 && response.status < 300) {\n        const payload: IUserState = json;\n        commit('SET_USER', payload);\n      } else {\n        if (json.error) {\n          throw new Error(json.message);\n        }\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  },\n\n  async save({commit}: ActionContext<IUserState, IRootState>, {name, email}) {\n    try {\n      const response = await fetch(API_ENDPOINT + '/api/v1/account', {\n        body: JSON.stringify({\n          name,\n          email,\n        }),\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem(AUTH_TOKEN),\n          'Content-Type': 'application/json',\n        },\n        method: 'put',\n      });\n\n      const json = await response.json();\n\n      if (response.status >= 200 && response.status < 300) {\n        const payload: IUserState = json;\n        commit('SET_USER', payload);\n        commit('SET_TOKEN', payload);\n      } else {\n        if (json.error) {\n          throw new Error(json.message);\n        }\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  },\n\n  async get({commit}: ActionContext<IUserState, IRootState>) {\n    try {\n      const response = await fetch(API_ENDPOINT + '/api/v1/account', {\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem(AUTH_TOKEN),\n          'Content-Type': 'application/json',\n        },\n        method: 'get',\n      });\n\n      const json = await response.json();\n\n      if (response.status >= 200 && response.status < 300) {\n        const payload: IUserState = json;\n        commit('SET_USER', payload);\n      } else {\n        if (json.error) {\n          commit('UNSET_USER');\n          throw new Error(json.message);\n        }\n      }\n    } catch (err) {\n      commit('UNSET_USER');\n      throw new Error(err);\n    }\n  },\n\n  logout({commit}: ActionContext<IUserState, IRootState>) {\n    commit('UNSET_USER');\n  },\n};\n\n// Mutations\nconst mutations: MutationTree<IUserState> = {\n  SET_USER(us: IUserState, payload: IUserState) {\n    us.email = payload.email;\n    us.id = payload.id;\n    us.name = payload.name;\n  },\n\n  SET_TOKEN(us: IUserState, payload: IUserState) {\n    localStorage.setItem(AUTH_TOKEN, payload.token as string);\n\n    us.token = payload.token;\n  },\n\n  UNSET_USER(us: IUserState) {\n    localStorage.removeItem(AUTH_TOKEN);\n\n    us.email = undefined;\n    us.id = undefined;\n    us.name = undefined;\n    us.token = undefined;\n  },\n};\n\nexport const user: Module<IUserState, IRootState> = {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"],"sourceRoot":""}]}